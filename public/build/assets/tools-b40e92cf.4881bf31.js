const p=(r,n=500)=>{let u=!0;return(...l)=>{u&&(u=!1,r(...l),setTimeout(()=>{u=!0},n))}},a=(r,n=300,u=1e3)=>{let l,c;return(...i)=>{l&&clearTimeout(l),l=setTimeout(()=>{c&&clearTimeout(c),c=null,r(...i)},n),u&&!c&&(c=setTimeout(()=>{l&&clearTimeout(l),c=null,r(...i)},u))}},y=(r,n)=>{const u=t=>Object.prototype.toString.call(t).slice(8,-1).toLowerCase(),l=(t,o)=>{if(t.length!==o.length)return!1;let e=t.length;for(;e--;)if(typeof t[e]!=typeof o[e]||typeof t[e]=="object"&&!y(t[e],o[e])||t[e]!==o[e])return!1;return!0},c=(t,o)=>{if(Object.keys(t).length!==Object.keys(o).length)return!1;for(let e in t)if(!Object.prototype.hasOwnProperty.call(o,e)||typeof t[e]!=typeof o[e]||typeof t[e]=="object"&&!y(t[e],o[e])||t[e]!==o[e])return!1;return!0},i=(t,o)=>t.toString()===o.toString();let f=u(r);return f!==u(n)?!1:f==="array"?l(r,n):f==="object"?c(r,n):f==="function"?i(r,n):r===n};export{a,y as c,p as y};
